#!/usr/bin/env bash

HOSTFILE=""
PORTS=""
OUTPUTFILE=""
NMAPFILE=""

UUID=$(uuidgen)

usage() {  # Function: Print a help message.
  echo "Usage: $0 [ -f FILE OF IPS TO SCAN  ] 
  		  [ -n NMAP OUTPUT FILE ] 
		  [ -o OUTPUT FILE ] 
		  [ -p PORTS ] [ -h HELP ]" 1>&2
}

echo "|-------------------------------------------------------------------------------------------------------|"
banner="
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⡻⠿⠿⡯⠭⢍⡉⠉⣉⣑⣒⣛⡓⠶⣦⣌⣙⡳⠼⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠛⣉⣉⠉⠉⠉⠁⠀⠙⠛⠓⠂⠤⢭⣍⣛⠶⣭⡙⠿⣷⣬⣽⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣥⣶⠾⠟⠛⠛⠛⠃⠀⠀⠘⠟⠿⢿⣿⣦⡀⠈⠛⢷⣦⣝⠷⣌⣹⣿⣾⢄⠙⠿⢿⣿⣿⣿⠿⣟⡿⢿⣿⣿⣿⣿⣃⠀⢻⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣽⣿⣯⣥⣤⣤⣴⣶⡦⠀⠀⠀⠠⣤⣄⠀⠀⠈⠙⢿⣷⣄⠀⠹⣿⣷⣌⣿⠋⠙⢿⠃⠀⠈⠩⣿⣿⠿⠛⢿⣦⣼⠿⣿⣿⣿⣦⣺⣿⣿⣿⣿⣿⣯
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⢛⣿⣿⡏⠁⠀⠀⡆⠀⣶⡈⠻⢿⣷⣶⣤⣀⢻⣿⣷⣼⡿⠻⢿⣯⣤⣠⣨⠤⠀⠀⠀⠀⠼⣿⣿⠀⠈⠻⠿⠿⠭⣩⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⣸⣿⡿⣿⣿⣿⡟⣩⠀⠐⢁⠀⣽⡆⢸⣿⣶⣶⣤⡙⢿⣿⣿⣿⣿⣿⡷⠀⣌⠻⣿⣿⣿⣻⣏⠀⠀⠀⠀⠈⣻⣷⡖⠀⠀⠴⠶⢾⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⡀⣿⣅⣤⣻⣿⣿⢠⣿⣼⣢⣾⣧⣿⠇⢺⣿⡿⣿⠟⠁⠸⠿⣿⣿⡿⠋⠀⠀⢹⣆⠙⣿⣟⠿⣿⣦⣄⣀⠀⠀⠈⠛⢯⡀⠀⠀⠀⢀⣙⠿⠿⢿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⠀⢙⣛⠉⡙⠻⣿⢿⣿⣿⣿⡿⠙⠁⠀⣼⣯⣮⣴⣋⣀⣀⠚⡿⠟⠀⣀⡀⠀⠘⣿⡿⡿⣿⣌⠙⢿⠿⠟⠁⠀⡀⠈⠛⠿⠄⠀⠀⠀⠈⠛⠿⣶⢿⡿⣷⣌
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠁⣞⣿⢻⣷⣆⠙⢦⣉⠚⣫⣾⣿⣿⣿⣀⠀⠀⠸⠿⠁⠀⢠⠀⢉⡙⠉⠀⠀⣿⣿⣿⡟⠀⣿⣿⣿⣿⣿⣤⡀⠀⠀⠀⠀⢈⠁⠐⠒⠀⠀⠀⠀⠙⠶⢦⣼⡄⠀⠘⢿
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⢻⣿⠈⢻⣿⣤⡶⢋⡾⢿⣿⡿⠛⠛⠉⠀⠀⠀⠀⠀⣤⡤⠖⠋⣁⣀⣠⡀⣿⣿⡏⠀⠀⣮⡏⠙⠉⠉⣁⣿⣧⠀⠀⠐⠀⠉⡀⠀⠀⠀⠀⠈⠢⣀⡈⣙⡇⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡋⢸⡯⣿⣦⠖⣼⣿⠳⡟⢡⣾⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⠢⡀⢶⣿⡿⠿⠃⣾⣿⡇⠀⢀⣿⡇⠀⠀⢀⡿⣿⣿⣷⡀⠀⠠⠤⡀⠀⠀⠀⠀⠀⠄⣙⠻⣾⠧⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢻⣷⢻⣧⣾⣿⣿⣄⣇⣼⣿⣿⣰⡄⣠⢀⣻⠤⣶⡶⢼⣦⡳⡌⡐⢄⠀⣠⣼⡇⣿⠁⠀⣼⡟⠋⠀⠀⣤⣷⣦⣄⣉⡉⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠸⣽⣧⢀⠂⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠘⢿⣧⡿⢿⣿⡟⣿⣿⣿⣿⣿⣯⠴⠂⣸⣿⡱⠖⢻⣢⣬⣷⣇⢻⣎⢻⣿⣿⣷⠏⠀⡞⠣⠀⠀⠀⢀⣿⡿⠿⢿⣟⣧⡀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠠⡗⠤⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠂⣽⣿⣿⣶⣿⣷⡘⢿⠯⠉⠾⠛⠁⣴⣿⣯⣴⣾⣟⣿⡾⣿⣿⡞⣿⡀⠻⣿⡟⢀⢾⠁⠀⠀⠀⠀⠈⢻⡇⠀⠀⢸⣿⡉⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠱⡄⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣡⣿⣶⣾⣯⣿⣿⣷⡀⠀⠀⠀⢀⣼⣿⣟⣯⣭⣁⣮⣴⣶⣷⠿⣧⣿⣧⣦⣄⠀⢸⣍⡁⠀⠀⠀⣬⣷⠘⡇⠀⢸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠘⢲⡄⠀⢒⠃⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣽⣿⣿⣿⣿⣿⣿⣿⡆⠀⠐⣿⣿⣿⣿⣿⣿⣟⣛⣉⣍⠉⢲⣷⢌⠈⠛⢠⣌⡛⠝⠃⠀⠀⢀⣿⠁⠀⠀⣄⢻⣿⡌⠃⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⣮⢷⡀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣝⠉⠿⢿⣿⠏⠉⠀⠀⠀⠠⠉⠙⢿⣿⠛⠛⠋⠉⠀⢠⠿⠟⢉⠄⢨⣿⠿⠨⠁⠀⠀⠀⠈⣿⣷⠀⠀⣼⣿⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣖⠢⡁⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⢀⠀⠀⠑⣴⣏⡴⠿⠂⠀⠀⠀⠀⠀⠀⢰⡈⢮⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠲⢿⠗⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⢸⣧⡀⠀⠀⠀⠀⠀⠀⠀⢀⣸⣷⢸⠀⣸⣿⠉⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⢀⠐⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀⠠⣀⠀⠀⠀⢀⢀⢀⠎⠀⠀⠀⠀⠀⢺⠃⠁⠀⠀⠀⠀⠀⠀⣰⡟⠁⠁⠀⠧⠟⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢠⠆⢾⣿⣾⣿⣿⣿⣿⠉⠀⠀⠀⠀⠀⠀⠙⠀⠀⠀⠀⠀⠀⠀⠰⣟⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠀⠐⠋⠉⠛⠻⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⡇⢀⡠⢲⣀⠀⠀⠀⠀⠀⠀⠀
⠸⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣼⣶⣤⣄⣀⣀⡀⢤⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢀⣄⣸⠁⢰⣤⣼⣻⣦⠁
⠀⠈⠻⣦⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣦⣴⣾⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣯⢹⣗⣾⣿⣿⣿⠛
⠀⠀⠀⠀⠀⠈⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣶⣿⣟⣿⣿⣿⣿⠇
"

echo "$banner"
echo "|-------------------------------------------------------------------------------------------------------|"
echo "|                                       < Rustscan + Nmap Scanner >                                     |"
echo "|                                               < By: Alex >                                            |"
echo "|-------------------------------------------------------------------------------------------------------|"
echo ""

echo "[*] Checking arguments..."

exit_error() { # Function: Exit with error.
  usage
  echo "---------------"
  echo "Exiting!"
  exit 1
}

 while getopts "f:n:p:o:h" opt
 do
	 case ${opt} in
		f)
			# echo "IP file: ${OPTARG}"
			HOSTFILE="${OPTARG}"
			;;
		n)
			# echo "Nmap output file: ${OPTARG}"
			NMAPFILE="${OPTARG}"
			;;
		p)
			# echo "Ports to scan: ${OPTARG}"
			PORTS="${OPTARG}"
			;;
		o)
			# echo "Rustscan output file: ${OPTARG}"
			OUTPUTFILE="${OPTARG}"
			;;
		h)
			exit_error
			;;
	esac
done

if [[ -z "$HOSTFILE" || -z "$PORTS" || -z "$OUTPUTFILE" || -z "$NMAPFILE" ]]
then
	echo "[!] Not all required arugments were supplied"
	echo "---------------"
	exit_error
	exit 1
fi

# Check if file exists
if [[ ! -f "$HOSTFILE" ]]
then
	echo "[!] Host file '$HOSTFILE' does not exist"
	echo "---------------"
	exit_error
	exit 1
fi

# Create directory to store results in
mkdir -p nmap_scans/"$UUID"

sudo rustscan -a "$HOSTFILE" -p "$PORTS" --ulimit 5000 --greppable > "$OUTPUTFILE"

sed -i "s/->/-/g" "$OUTPUTFILE"

declare -a port_array

while IFS= read -r line
do
	
	# echo "Line: $line"
    NMAP_UUID=$(uuidgen)

    cut_ip=$(echo "$line" | cut -d "-" -f1)    
	cut_port=$(echo "$line" | cut -d "[" -f2 | cut -d "]" -f1)
    port_array=${cut_port[@]}

	echo "Ip is: $cut_ip"
	echo "Ports are: ${port_array[@]}"

	echo "---------------"
	
	# For some reason quotes around $cut_ip has nmap return: "failed to resolve". I don't know why this is a bug.
	sudo nmap -sV -T4 -Pn -n --open -p $cut_port -oG nmap_scans/"$UUID"/"$NMAP_UUID"_"$NMAPFILE" $cut_ip

	echo "---------------"

done < "$OUTPUTFILE"

echo "$line"

echo "Merging files..."
cat nmap_scans/"$UUID"/*_"$NMAPFILE" >> nmap_scans/final-"$UUID".txt
echo "Done!"
